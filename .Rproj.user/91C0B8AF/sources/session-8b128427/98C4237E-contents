---
title: "Hypothesis Testing for Two Means"
output: html_document
---

```{r setup, include=FALSE, results='hide'}
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)

library(dplyr)
library(ggplot2)
library(openintro)

data("cle_sac")

# Clean the data

cle_sac <- cle_sac %>% 
  mutate(city = factor(city),
         race = factor(race),
         marital_status = factor(marital_status))

summary(cle_sac)

# Hmm... personal income of 0? Let's investigate

cle_sac %>% 
  filter(personal_income == 0)  

# What should we do?

cle_sac_full <- cle_sac

cle_sac <- cle_sac_full %>% 
  filter(age >= 18 & age <=65)
```

## Difference of the Means  

**Do people living in California make more money, on average, than people living in Ohio?**

#### Plot income vs. city

```{r}
cle_sac %>% 
  ggplot(aes(x = city, y = personal_income, fill = city)) +
  geom_boxplot(show.legend = FALSE) +
  labs(title = "Income vs. City",
       x = NULL,
       y = "Income")
```


1) Write the hypotheses.

$H_0:$

$H_A:$


2) Check conditions.
```{r}
income_sac <- cle_sac %>% 
  filter(city == "Sacramento", !is.na(personal_income)) %>% 
  select(personal_income) %>% 
  pull()

income_cle <- cle_sac %>% 
  filter(city == "Cleveland", !is.na(personal_income)) %>% 
  select(personal_income) %>% 
  pull()

n1 <- length(income_sac)
n2 <- length(income_cle)
```

$n_1$ = `r n1`

$n_2$ = `r n2`

```{r}
cle_sac %>% 
  ggplot(aes(personal_income, fill = city)) +
  geom_histogram(binwidth = 10000,
                 col = "white",
                 show.legend = FALSE) +
  facet_wrap(~ city) +
  labs(title = "Income vs. City")
```


3) Calculate test statistic.

```{r}
xbar1 <- mean(income_sac)
xbar2 <- mean(income_cle)

s1 <- sd(income_sac)
s2 <- sd(income_cle)

stat <- xbar1 - xbar2
null_value <- 0
se <- sqrt(s1^2/n1 + s2^2/n2)

df <- min(c(n1, n2)) - 1

t_stat <- (stat - null_value) / se 
```

```{r}
xbar_manual <- 19.85
xbar_auto <- 16.12

s_manual <- 4.51
s_auto <- 3.58

stat <- xbar_manual - xbar_auto
null_value <- 0
se <- sqrt(s_manual^2/26 + s_auto^2/26)

df <- min(c(26, 26)) - 1

t_stat <- (stat - null_value) / se 
t_stat
```

$t_{stat}$ = `r round(t_stat, 4)`  

4) Calculate p-value.

```{r}
p_val <- pt(t_stat, df = df, lower.tail = FALSE)
```

$p-value$ = `r round(p_val, 4)`  


5) Make a decision and conclude in the context of the problem.  

Decision: Fail to reject $H_0$   
Conclusion: We do not have enough evidence that the difference in average income for people in California is greater than the income for people in Ohio.  

### 99% Confidence Interval

```{r}
stat + c(-1, 1) * qt(0.995, df = df) * se
```

We are 99% confidence that the true difference in average income for people in California minus people in Ohio is between -\$6,429.28 and \$13,440.78.

### An easier way

```{r}
t.test(income_sac, income_cle, alternative = "greater",
       conf.level = 0.95)

t.test(income_cle, income_sac, alternative = "less",
       conf.level = 0.95)

t.test(income_sac, income_cle,
       conf.level = 0.99)
```

---

## Mean of the differences

[Kaggle](https://www.kaggle.com/datasets/steveahn/memory-test-on-drugged-islanders-data) dataset

```{r}
memory <- readr::read_csv(here::here("data/islander_data.csv"))

mem <- memory %>% 
  filter(Happy_Sad_group == "S",
         Drug == "A")

nd <- nrow(mem)
```


1) Write the hypotheses.

$H_0:$

$H_A:$


2) Check conditions.


```{r}
mem %>% 
  ggplot(aes(Diff)) +
  geom_histogram(binwidth = 7.5,
                 col = "white") +
  labs(x = "difference in Memory Score (after - before)",
       y = "Frequency",
       title = "Distribution of differences in Memory Scores") +
  theme_classic()
```

3) Calculate test statistic.
```{r}
stat <- mean(mem$Diff)
se <- sd(mem$Diff) / sqrt(nd)

t_stat <- (stat - null_value)/ se
```

4) Calculate p-value.
```{r}
p_val <- pt(t_stat, df = nd - 1, lower.tail = FALSE)
```


5) Make a decision and conclude in the context of the problem.

Decision: Reject $H_0$   
Conclusion: We have enough evidence that the true mean of the differences in memory score (after - before being primed with sad memories) is greater than 0.  

### 97% Confidence Interval

```{r}
stat + c(-1, 1) * qt(0.985, df = nd - 1) * se
```


### An easier way

```{r}
t.test(mem$Mem_Score_After, mem$Mem_Score_Before,
       conf.level = 0.97,
       paired = TRUE)

t.test(mem$Mem_Score_After, mem$Mem_Score_Before,
       alternative = "greater",
       conf.level = 0.95,
       paired = TRUE)
```

