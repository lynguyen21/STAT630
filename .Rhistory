geom_point(alpha = 0.3, size = 1) +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "Relationship between Month and Departure Delay",
x = "Month",
y = "Departure Delay") +
scale_x_continuous(breaks = 1:12, labels = month_names) +  # Set custom breaks and labels
theme_minimal()
# Print the plot
print(p)
month_names <- c("January", "February", "March", "April", "May", "June",
"July", "August", "September", "October", "November", "December")
ggplot(nycflights, aes(x = month, y = dep_delay)) +
geom_point(alpha = 0.3, size = 1) +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "Relationship between Month and Departure Delay",
x = "Month",
y = "Departure Delay") +
scale_x_continuous(breaks = 1:12, labels = month_names) +  # Set custom breaks and labels
theme_minimal()
month_names <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
ggplot(nycflights, aes(x = month, y = dep_delay)) +
geom_point(alpha = 0.3, size = 1) +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "Relationship between Month and Departure Delay",
x = "Month",
y = "Departure Delay") +
scale_x_continuous(breaks = 1:12, labels = month_names) +  # Set custom breaks and labels
theme_minimal()
month_names <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
ggplot(nycflights, aes(x = month, y = dep_delay)) +
geom_point(alpha = 0.3, size = 1) +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "Relationship between Month and Departure Delay",
x = "Month",
y = "Departure Delay") +
scale_x_continuous(breaks = 1:12, labels = month_names) +
theme_minimal()
month_names <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
ggplot(nycflights, aes(x = month, y = dep_delay)) +
geom_point(alpha = 0.3, size = 1) +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "Relationship between Month and Departure Delay of AA flights in December",
x = "Month",
y = "Departure Delay") +
scale_x_continuous(breaks = 1:12, labels = month_names) +
theme_minimal()
p <- ggplot(nycflights, aes(x = month, y = dep_delay, color = distance)) +
geom_point(size = 2, alpha = 0.6) +
labs(title = "Relationship between Month, Departure Delay, and Distance",
x = "Month",
y = "Departure Delay",
color = "Distance") +
scale_color_gradient(low = "blue", high = "red") +  # Adjust color scale
theme_minimal()
# Print the plot
print(p)
ggplot(nycflights, aes(x = month, y = dep_delay, color = distance)) +
geom_point(size = 2, alpha = 0.6) +
labs(title = "Relationship between Month, Departure Delay, and Distance",
x = "Month",
y = "Departure Delay",
color = "Distance") +
scale_color_gradient(low = "blue", high = "red") +
theme_minimal()
ggplot(nycflights, aes(x = month, y = dep_delay, color = distance)) +
geom_point(size = 2, alpha = 0.6) +
labs(title = "Relationship between Month, Departure Delay, and Distance",
x = "Month",
y = "Departure Delay",
color = "Distance") +
scale_x_continuous(breaks = 1:12, labels = month_names) +
scale_color_gradient(low = "blue", high = "red") +
theme_minimal()
month_names <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
ggplot(nycflights, aes(x = month, y = dep_delay)) +
geom_point(alpha = 0.3, size = 1) +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "Relationship between Month and Departure Delay of AA flights in December 2013",
x = "Month",
y = "Departure Delay") +
scale_x_continuous(breaks = 1:12, labels = month_names) +
theme_minimal()
ggplot(nycflights, aes(x = month, y = dep_delay, color = distance)) +
geom_point(size = 2, alpha = 0.6) +
labs(title = "Relationship between Month, Departure Delay, and Distance of AA in December 2013",
x = "Month",
y = "Departure Delay",
color = "Distance") +
scale_x_continuous(breaks = 1:12, labels = month_names) +
scale_color_gradient(low = "blue", high = "red") +
theme_minimal()
ggplot(nycflights, aes(x = month, y = dep_delay, color = distance)) +
geom_point(size = 2, alpha = 0.6) +
labs(title = "Relationship between Month, Departure Delay, and Distance of AA in December 2013",
x = "Month",
y = "Departure Delay",
color = "Distance") +
scale_x_continuous(breaks = 1:12, labels = month_names) +
scale_color_gradient(low = "blue", high = "red")
ggplot(nycflights, aes(x = month, y = dep_delay, color = distance)) +
geom_point(size = 2, alpha = 0.6) +
labs(title = "Relationship between Month, Departure Delay, and Distance of AA in December 2013",
x = "Month",
y = "Departure Delay",
color = "Distance") +
scale_x_continuous(breaks = 1:12, labels = month_names) +
scale_color_gradient(low = "blue", high = "red") +
theme_minimal()
ggplot(nycflights, aes(x = month, y = dep_delay, color = distance)) +
geom_point(size = 2, alpha = 0.6) +
labs(title = "Relationship between Month, Departure Delay, and Distance of AA in December 2013",
x = "Month",
y = "Departure Delay",
color = "Distance") +
scale_x_continuous(breaks = 1:12, labels = month_names) +
scale_color_gradient(low = "blue", high = "red")
month_names <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
ggplot(nycflights, aes(x = month, y = dep_delay)) +
geom_point(alpha = 0.3, size = 1) +
geom_smooth(method = "lm", se = FALSE, color = "blue") +
labs(title = "Relationship between Month and Departure Delay of AA flights in December 2013",
x = "Month",
y = "Departure Delay") +
scale_x_continuous(breaks = 1:12, labels = month_names)
ggplot(nycflights, aes(x = month, y = dep_delay, color = distance)) +
geom_point(size = 2, alpha = 0.6) +
labs(title = "Relationship between Month, Departure Delay and Distance of AA in December 2013",
x = "Month",
y = "Departure Delay",
color = "Distance") +
scale_x_continuous(breaks = 1:12, labels = month_names) +
scale_color_gradient(low = "blue", high = "red")
install.packages("tidytuesdayR")
install.packages("tidytuesdayR")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
tuesdata <- tidytuesdayR::tt_load('2021-03-02')
table(bechdel$binary)
p <- 0.19
n <-c(25,50,100)
n_samp <- 1000
samples_sz_25 <-rbinom(n_samp, 25, p)
samples_sz_50 <-rbinom(n_samp, 50, p)
samples_sz_100 <-rbinom(n_samp, 100, p)
xbar_sz_25 <- mean(samples_sz_25)
sd_sz_25 <- sd(samples_sz_25)
xbar_sz_50 <- mean(samples_sz_50)
sd_sz_50 <- sd(samples_sz_50)
xbar_sz_100 <- mean(samples_sz_100)
sd_sz_100 <- sd(samples_sz_100)
xbar_sz_25 <- mean(samples_sz_25)
xbar_sz_25
sd_sz_25 <- sd(samples_sz_25)
sd_sz_25
xbar_sz_50 <- mean(samples_sz_50)
xbar_sz_50
sd_sz_50 <- sd(samples_sz_50)
sd_sz_50
xbar_sz_100 <- mean(samples_sz_100)
xbar_sz_100
sd_sz_100 <- sd(samples_sz_100)
sd_sz_100
xbar_sz_25 <- round(mean(samples_sz_25),3)
xbar_sz_25
sd_sz_25 <- round(sd(samples_sz_25),3)
sd_sz_25
xbar_sz_50 <- round(mean(samples_sz_50),3)
xbar_sz_50
sd_sz_50 <- round(sd(samples_sz_50),3)
sd_sz_50
xbar_sz_100 <- round(mean(samples_sz_100),3)
xbar_sz_100
sd_sz_100 <- round(sd(samples_sz_100),3)
sd_sz_100
sd_theo <- numeric(length(n))
for (i in seq_along(n)) {
sd_theo[i] <- sqrt(round((p * (1 - p)) / n[i]),3)
}
sd_theo <- numeric(length(n))
for (i in seq_along(n)) {
sd_theo[i] <- sqrt(round((p * (1 - p)) / n[i]), 3)
}
sd_theo <- numeric(length(n))
for (i in seq_along(n)) {
sd_theo[i] <- sqrt((p * (1 - p)) / n[i])
}
results_df_sd <- data.frame(Sample_Size = n, mu = p, Sd = sd_theo)
results_df_sd
p_bar = 0.7
n_samp_sz = 250
p_prob <- 0.35
P_35 <- round(pnorm(0.35), 3)
P_35
P_more_than_35 <- 1 - P_35
P_more_than_35
alpha <- 1-0.9
z_star <- qnorm(1-alpha/2)
z_star
p_bar <- 0.7
n_samp_sz <- 250
ci_low <- p_bar - z_star * sqrt(p_bar*(1-p_bar)/n_samp_sz)
ci_low
ci_high <- p_bar + z_star * sqrt(p_bar*(1-p_bar)/n_samp_sz)
ci_high
qnorm(0.95)
tuesdata <- tidytuesdayR::tt_load('2021-03-02')
tuesdata <- tidytuesdayR::tt_load(2021, week = 11)
bechdel <- tuesdata$movies
unlink("Nguyen_Ly_hw4_ok_cache", recursive = TRUE)
## set personal access token:
credentials::set_github_pat("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")
knitr::opts_chunk$set(echo = TRUE)
qnorm(0.9, mean = 77.2, sd = 14.2, lower.tail = FALSE)
qnorm(0.9, mean = 75.3, sd = 14.2, lower.tail = FALSE)
# Treatment Group Final Exam Scores
top_10_percentile_treatment <- top_percentile_score(77.2, 14.9, 0.9)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
n1 <- 30548
n2 <- 19448
p1_hat <- 222/n1
p2_hat <- 92/n2
n1*p1_hat; n1*(1-p1_hat)
n2*p2_hat; n2*(1-p2_hat)
stat <- p1_hat - p2_hat
null_val <- 0
se <- sqrt(p1_hat*(1-p1_hat)/n1 + p2_hat*(1-p2_hat)/n2)
z_stat <- (stat - null_val)/se
z_stat
p_val <- pnorm(z_stat, lower.tail = FALSE)
p_val
knitr::opts_chunk$set(echo = TRUE)
lower_bound <- 14.85
upper_bound <- 32.01
df <- 23
# Calculate the probabilities
prob_lower <- pchisq(lower_bound, df)
prob_upper <- pchisq(upper_bound, df)
# Calculate the probability between the bounds
probability <- prob_upper - prob_lower
lower_bound <- 14.85
upper_bound <- 32.01
df <- 23
# Calculate the probabilities
prob_lower <- pchisq(lower_bound, df)
prob_lower
prob_upper <- pchisq(upper_bound, df)
prob_upper
# Calculate the probability between the bounds
probability <- prob_upper - prob_lower
probability
b <- qchisq(0.975, df)
b
a <- qchisq(0.025, 23)
a
b <- qchisq(0.975, df)
b
a <- qchisq(0.025, df)
a
b <- round(qchisq(0.975, df),2)
b
a <- round(qchisq(0.025, df),2)
a
p <- 0.05
df <- 23
# Calculate the quantile
x_squared_005 <- qchisq(p, df)
# Print the result
cat("X^2_0.05(23) =", x_squared_005)
p <- 0.05
df <- 23
# Calculate the quantile
x_squared_005 <- round(qchisq(p, df),2)
# Print the result
cat("X^2_0.05(23) =", x_squared_005)
# p <- 0.05
# df <- 23
# Calculate the quantile
x_squared_005 <- round(qchisq(0.95, 23),2)
# Print the result
cat("X^2_0.05(23) =", x_squared_005)
x_squared_095 <- round(qchisq(0.05, 23),2)
# Print the result
cat("X^2_0.05(23) =", x_squared_095)
# p <- 0.05
# df <- 23
# Calculate the quantile
x_squared_005 <- round(qchisq(0.95, 23),2)
# Print the result
cat("X^2_0.05(23) =", x_squared_005)
x_squared_095 <- round(qchisq(0.05, 23),2)
# Print the result
cat("X^2_0.95(23) =", x_squared_095)
data("cle_sac")
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(dplyr)
library(ggplot2)
library(openintro)
data("cle_sac")
# Clean the data
cle_sac <- cle_sac %>%
mutate(city = factor(city),
race = factor(race),
marital_status = factor(marital_status))
summary(cle_sac)
# Hmm... personal income of 0? Let's investigate
cle_sac %>%
filter(personal_income == 0)
# What should we do?
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(dplyr)
library(ggplot2)
library(openintro)
data("cle_sac")
# Clean the data
cle_sac <- cle_sac %>%
mutate(city = factor(city),
race = factor(race),
marital_status = factor(marital_status))
summary(cle_sac)
# Hmm... personal income of 0? Let's investigate
cle_sac %>%
filter(personal_income == 0)
# What should we do?
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(dplyr)
library(ggplot2)
library(openintro)
data("cle_sac")
# Clean the data
cle_sac <- cle_sac %>%
mutate(city = factor(city),
race = factor(race),
marital_status = factor(marital_status))
summary(cle_sac)
# Hmm... personal income of 0? Let's investigate
cle_sac %>%
filter(personal_income == 0)
# What should we do?
View(cle_sac)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(dplyr)
library(ggplot2)
library(openintro)
data("cle_sac")
# Clean the data
cle_sac <- cle_sac %>%
mutate(city = factor(city),
race = factor(race),
marital_status = factor(marital_status))
summary(cle_sac)
# Hmm... personal income of 0? Let's investigate
cle_sac %>%
filter(personal_income == 0)
print(filter)
# What should we do?
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(dplyr)
library(ggplot2)
library(openintro)
data("cle_sac")
# Clean the data
cle_sac <- cle_sac %>%
mutate(city = factor(city),
race = factor(race),
marital_status = factor(marital_status))
summary(cle_sac)
# Hmm... personal income of 0? Let's investigate
cle_sac %>%
filter(personal_income == 0)
# What should we do?
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(dplyr)
library(ggplot2)
library(openintro)
data("cle_sac")
# Clean the data
cle_sac <- cle_sac %>%
mutate(city = factor(city),
race = factor(race),
marital_status = factor(marital_status))
summary(cle_sac)
# Hmm... personal income of 0? Let's investigate
cle_sac %>%
filter(personal_income == 0)
# What should we do?
cle_sac_full <- cle_sac
cle_sac <- cle_sac_full %>%
filter(age >= 18 & age <= 65)
summary(cle_sac$age)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(dplyr)
library(ggplot2)
library(openintro)
data("cle_sac")
# Clean the data
cle_sac <- cle_sac %>%
mutate(city = factor(city),
race = factor(race),
marital_status = factor(marital_status))
summary(cle_sac)
# Hmm... personal income of 0? Let's investigate
cle_sac %>%
filter(personal_income == 0)
# What should we do?
cle_sac_full <- cle_sac
cle_sac <- cle_sac_full %>%
filter(age >= 18 & age <= 65)
summary(cle_sac$age)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(dplyr)
library(ggplot2)
library(openintro)
data("cle_sac")
# Clean the data
cle_sac <- cle_sac %>%
mutate(city = factor(city),
race = factor(race),
marital_status = factor(marital_status))
summary(cle_sac)
# Hmm... personal income of 0? Let's investigate
cle_sac %>%
filter(personal_income == 0)
# What should we do?
cle_sac_full <- cle_sac
cle_sac <- cle_sac_full %>%
filter(age >= 18 & age <= 65)
summary(cle_sac$age)
cle_sac %>%
ggplot(aes(x = city, y = personal_income, fill = city)) +
geom_boxplot(show.legend = FALSE) +
labs(title = "Income vs. City",
x = NULL,
y = "Income")
income_sac <- cle_sac %>%
filter(city == "Sacramento", !is.na(personal_income)) %>%
select(personal_income) %>%
pull()
income_cle <- cle_sac %>%
filter(city == "Cleveland", !is.na(personal_income)) %>%
select(personal_income) %>%
pull()
n1 <- length(income_sac)
n2 <- length(income_cle)
cle_sac %>%
ggplot(aes(personal_income, fill = city)) +
geom_histogram(binwidth = 10000,
col = "white",
show.legend = FALSE) +
facet_wrap(~ city) +
labs(title = "Income vs. City")
stat + c(-1, 1) * qt(0.995, df = df) * se
p_val <- pt(t_stat, df = df, lower.tail = FALSE)
income_sac <- cle_sac %>%
filter(city == "Sacramento", !is.na(personal_income)) %>%
select(personal_income) %>%
pull()
income_cle <- cle_sac %>%
filter(city == "Cleveland", !is.na(personal_income)) %>%
select(personal_income) %>%
pull()
n1 <- length(income_sac)
n2 <- length(income_cle)
cle_sac %>%
ggplot(aes(personal_income, fill = city)) +
geom_histogram(binwidth = 10000,
col = "white",
show.legend = FALSE) +
facet_wrap(~ city) +
labs(title = "Income vs. City")
cle_sac %>%
ggplot(aes(personal_income, fill = city)) +
geom_histogram(binwidth = 10000,
col = "white",
show.legend = FALSE) +
facet_wrap(~ city) +
labs(title = "Income vs. City")
xbar1 <- mean(income_sac)
xbar2 <- mean(income_cle)
s1 <- sd(income_sac)
s2 <- sd(income_cle)
stat <- xbar1 - xbar2
null_value <- 0
se <- sqrt(s1^2/n1 + s2^2/n2)
df <- min(c(n1, n2)) - 1
t_stat <- (stat - null_value) / se
p_val <- pt(t_stat, df = df, lower.tail = FALSE)
p_val <- pt(t_stat, df = df, lower.tail = FALSE)
stat + c(-1, 1) * qt(0.995, df = df) * se
t.test(income_sac, income_cle, alternative = "less",
conf.level = 0.95)
t.test(income_cle, income_sac, alternative = "greater",
conf.level = 0.95)
t.test(income_sac, income_cle,
conf.level = 0.99)
stat + c(-1, 1) * qt(0.995, df = df) * s
stat + c(-1, 1) * qt(0.995, df = df) * se
t.test(income_sac, income_cle, alternative = "less",
conf.level = 0.95)
t.test(income_cle, income_sac, alternative = "greater",
conf.level = 0.95)
t.test(income_sac, income_cle,
conf.level = 0.99)
cle_sac %>%
ggplot(aes(x = city, y = personal_income, fill = city)) +
geom_boxplot(show.legend = FALSE) +
labs(title = "Income vs. City",
x = NULL,
y = "Income")
